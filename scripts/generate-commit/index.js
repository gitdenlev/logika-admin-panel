import fs from "fs/promises";
import ollama from "ollama";
import { execSync } from "child_process";
import boxen from "boxen";
import chalk from "chalk";
import ora from "ora";

async function loadPrompt(templatePath) {
  return await fs.readFile(templatePath, "utf-8");
}

async function generateCommitMessage(diffText) {
  const context = await loadPrompt("./scripts/generate-commit/CONTEXT.md");
  const prompt = `${context}\n\nGit diff:\n${diffText}`;

  const response = await ollama.chat({
    model: "llama3.2:latest",
    messages: [{ role: "user", content: prompt }],
  });

  return response.message.content.trim();
}

function sanitizeMessage(raw) {
  let firstLine = raw.split("\n")[0].trim();

  firstLine = firstLine.replace(/^"+|"+$/g, "");

  if (firstLine.length > 80) {
    firstLine = firstLine.slice(0, 77) + "...";
  }

  return firstLine;
}

function logBox(message, color = "blue", icon = "‚ÑπÔ∏è") {
  console.log(
    boxen(`${icon}  ${message}`, {
      padding: 1,
      margin: 1,
      borderStyle: "round",
      borderColor: color,
    })
  );
}

export async function main() {
  let spinner;
  try {
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –¥–æ–¥–∞—Ç–∏ –≤—Å—ñ —Ñ–∞–π–ª–∏ —É staging
    execSync("git add .", { stdio: "inherit" });

    const realDiff = execSync("git diff --staged").toString().trim();

    if (!realDiff) {
      logBox("–ó–º—ñ–Ω–∏ –¥–ª—è –∫–æ–º—ñ—Ç—É –≤—ñ–¥—Å—É—Ç–Ω—ñ.", "yellow", "‚ö†Ô∏è");
      return;
    }

    spinner = ora(
      chalk.cyan("ü§ñ –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –∫–æ–º—ñ—Ç—É... –ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞—á–µ–∫–∞–π—Ç–µ.")
    ).start();
    const rawCommitMessage = await generateCommitMessage(realDiff);
    const commitMessage = sanitizeMessage(rawCommitMessage);
    spinner.succeed(
      chalk.green("‚ú® –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –∫–æ–º—ñ—Ç—É —É—Å–ø—ñ—à–Ω–æ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ!")
    );

    logBox(
      `–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —â–æ –±—É–¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ:\n\n${chalk.bold.green(
        `"${commitMessage}"`
      )}`,
      "green",
      "üìù"
    );

    execSync(`git commit -m \"${commitMessage}\"`, { stdio: "inherit" });

    logBox("–ö–æ–º—ñ—Ç —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ!", "green", "‚úÖ");
  } catch (error) {
    if (spinner) {
      spinner.fail(chalk.red("üí• –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞."));
    }
    logBox(`–ü–æ–º–∏–ª–∫–∞: ${error.message}`, "red", "üí•");
  }
}

main();
